const circle = document.getElementById('clickCircle');
const canvas = document.getElementById('particleCanvas');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const shrinkScale = 0.9;
const particles = [];
const gravity = 0.35;
const lifeTime = 160;

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
let clicks = parseInt(localStorage.getItem('clicks')) || 0;
const purchasedThemes = new Set(JSON.parse(localStorage.getItem('purchasedThemes')) || ['images/kryg.png']);
const clickCountEl = document.getElementById('clickCount');
clickCountEl.textContent = clicks;

// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
localStorage.removeItem('warningCount');

// –ü–∞–Ω–µ–ª—å —Ç–µ–º
const themeToggle = document.querySelector('.theme-toggle');
const themeList = document.querySelector('.theme-list');
const themeItems = document.querySelectorAll('.theme-item');

// –û–∫–Ω–æ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –∫–ª–∏–∫–æ–≤
const notEnough = document.getElementById('notEnough');
const notEnoughClose = notEnough.querySelector('.close');
notEnoughClose.addEventListener('click', () => {
  notEnough.classList.remove('show');
});

// –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞
circle.src = purchasedThemes.has('images/kryg1.png') ? 'images/kryg1.png' : 'images/kryg.png';
circle.src = purchasedThemes.has('images/morozova.png') ? 'images/morozova.png' : 'images/kryg1.png';

// –ë–µ–ª–æ–µ –º–µ–Ω—é
const whiteMenu = document.getElementById('whiteMenu');
const menuClose = document.getElementById('menuClose');
const backgroundLayer = document.getElementById('backgroundLayer');

themeToggle.addEventListener('click', () => {
  // –í–∫–ª—é—á–∞–µ–º –±–ª—é—Ä –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
  if (!backgroundLayer.classList.contains('blurred')) {
    backgroundLayer.classList.add('blurred');
    whiteMenu.classList.add('show');
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∞ –Ω–µ –≤—Å–µ body
    const clickCircle = document.getElementById('clickCircle');
    const resetBtn = document.getElementById('resetBtn');
    const clickCounter = document.querySelector('.click-counter');
    
    if (clickCircle) clickCircle.style.pointerEvents = 'none';
    if (resetBtn) resetBtn.style.pointerEvents = 'none';
    if (clickCounter) clickCounter.style.pointerEvents = 'none';
    
    themeToggle.style.pointerEvents = 'none'; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∞–º—É –∫–Ω–æ–ø–∫—É
  }
  // –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
menuClose.addEventListener('click', () => {
  whiteMenu.classList.remove('show');
  backgroundLayer.classList.remove('blurred');
  
  // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  const clickCircle = document.getElementById('clickCircle');
  const resetBtn = document.getElementById('resetBtn');
  const clickCounter = document.querySelector('.click-counter');
  
  if (clickCircle) clickCircle.style.pointerEvents = 'auto';
  if (resetBtn) resetBtn.style.pointerEvents = 'auto';
  if (clickCounter) clickCounter.style.pointerEvents = 'auto';
  
  themeToggle.style.pointerEvents = 'auto'; // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
});

// –í—ã–±–æ—Ä —Ç–µ–º—ã –≤ –±–µ–ª–æ–º –º–µ–Ω—é (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ª–æ–≥–∏–∫—É)
const menuThemeItems = document.querySelectorAll('#whiteMenu .theme-item');
console.log('–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–µ–º –≤ –º–µ–Ω—é:', menuThemeItems.length);
menuThemeItems.forEach(item => {
  item.addEventListener('click', () => {
    const imgSrc = item.getAttribute('data-img');
    const price = parseInt(item.getAttribute('data-price'));

    if (purchasedThemes.has(imgSrc)) {
      circle.src = imgSrc;
      whiteMenu.classList.remove('show');
      backgroundLayer.classList.remove('blurred');
      
      // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
      const clickCircle = document.getElementById('clickCircle');
      const resetBtn = document.getElementById('resetBtn');
      const clickCounter = document.querySelector('.click-counter');
      
      if (clickCircle) clickCircle.style.pointerEvents = 'auto';
      if (resetBtn) resetBtn.style.pointerEvents = 'auto';
      if (clickCounter) clickCounter.style.pointerEvents = 'auto';
      
      themeToggle.style.pointerEvents = 'auto';
      return;
    }

    if (clicks >= price) {
      clicks -= price;
      clickCountEl.textContent = clicks;
      purchasedThemes.add(imgSrc);
      circle.src = imgSrc;
      whiteMenu.classList.remove('show');
      backgroundLayer.classList.remove('blurred');
      
      // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
      const clickCircle = document.getElementById('clickCircle');
      const resetBtn = document.getElementById('resetBtn');
      const clickCounter = document.querySelector('.click-counter');
      
      if (clickCircle) clickCircle.style.pointerEvents = 'auto';
      if (resetBtn) resetBtn.style.pointerEvents = 'auto';
      if (clickCounter) clickCounter.style.pointerEvents = 'auto';
      
      themeToggle.style.pointerEvents = 'auto';
      saveProgress();

      if (imgSrc.includes('kryg1.png')) {
        playThemeSound();
      }
      
      if (imgSrc.includes('morozova.png')) {
        playMorozSound();
      }

    } else {
      notEnough.classList.add('show');
    }
  });
});

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–ª–∏–∫–æ–≤ - –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–û
/*
themeItems.forEach(item => {
  item.addEventListener('click', () => {
    const imgSrc = item.getAttribute('data-img');
    const price = parseInt(item.getAttribute('data-price'));

    if (purchasedThemes.has(imgSrc)) {
      circle.src = imgSrc;
      themeList.classList.remove('show');
      document.body.classList.remove('blurred');
      return;
    }

    if (clicks >= price) {
      clicks -= price;
      clickCountEl.textContent = clicks;
      purchasedThemes.add(imgSrc);
      circle.src = imgSrc;
      themeList.classList.remove('show');
      document.body.classList.remove('blurred');
      saveProgress();

      if (imgSrc.includes('kryg1.png')) {
        playThemeSound();
      }
      
      if (imgSrc.includes('morozova.png')) {
        playMorozSound();
      }

    } else {
      notEnough.classList.add('show');
      document.body.classList.remove('blurred');
    }
  });
});
*/

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
function saveProgress() {
  localStorage.setItem('clicks', clicks);
  localStorage.setItem('purchasedThemes', JSON.stringify(Array.from(purchasedThemes)));
}

// –ß–∞—Å—Ç–∏—Ü—ã
class Particle {
  constructor(x, y, img) {
    this.x = x;
    this.y = y;
    this.vx = (Math.random() - 0.5) * 8;
    this.vy = -Math.random() * 6 - 4;
    this.size = 20 + Math.random() * 10;
    this.life = lifeTime;
    this.img = img;
  }

  update() {
    this.vy += gravity * 0.4;
    this.x += this.vx;
    this.y += this.vy;
    this.life--;
    if (this.y + this.size / 2 >= canvas.height - 5) {
      this.y = canvas.height - this.size / 2 - 5;
      this.vy *= -0.4;
      this.vx *= 0.7;
    }
  }

  draw() {
    const alpha = Math.max(this.life / lifeTime, 0);
    ctx.save();
    ctx.globalAlpha = alpha;
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.size / 2, 0, Math.PI * 2);
    ctx.closePath();
    ctx.clip();
    ctx.drawImage(this.img, this.x - this.size / 2, this.y - this.size / 2, this.size, this.size);
    ctx.restore();
  }
}

const klikImg = new Image();
klikImg.src = 'images/klik.png';

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  for (let i = particles.length - 1; i >= 0; i--) {
    const p = particles[i];
    p.update();
    p.draw();
    if (p.life <= 0 || p.y > canvas.height + 50) {
      particles.splice(i, 1);
    }
  }
  requestAnimationFrame(animate);
}
animate();

function spawnParticles(x, y) {
  const count = 2 + Math.floor(Math.random() * 2);
  for (let i = 0; i < count; i++) {
    particles.push(new Particle(x, y, klikImg));
  }
}

// === üõ°Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏–∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–∞ ===
let clickTimes = [];
let warningCount = 0;
const MAX_WARNINGS = 3;
const MAX_CLICKS_PER_SECOND = 100; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ 100 –∫–ª–∏–∫–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
const CHECK_WINDOW = 10000; // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥
const MIN_CLICK_INTERVAL = 2; // –£–º–µ–Ω—å—à–∞–µ–º –¥–æ 2–º—Å (—Ç–æ–ª—å–∫–æ –º–∞—à–∏–Ω–Ω—ã–µ –∫–ª–∏–∫–∏)
const REGULARITY_THRESHOLD = 1; // –£–º–µ–Ω—å—à–∞–µ–º –ø–æ—Ä–æ–≥ –¥–æ 1–º—Å
const MIN_FAST_CLICKS = 20; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ 20 –±—ã—Å—Ç—Ä—ã—Ö –∫–ª–∏–∫–æ–≤ –ø–æ–¥—Ä—è–¥

function handleAutoClickerProtection() {
  const now = Date.now();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä—ã–µ –∫–ª–∏–∫–∏ –ø–æ–¥—Ä—è–¥ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –º–Ω–æ–≥–æ)
  if (clickTimes.length > 0) {
    const lastClick = clickTimes[clickTimes.length - 1];
    const interval = now - lastClick;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–∂–µ –º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä—ã—Ö –∫–ª–∏–∫–æ–≤ –ø–æ–¥—Ä—è–¥
    if (interval < MIN_CLICK_INTERVAL && clickTimes.length >= MIN_FAST_CLICKS) {
      // –°—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä—ã—Ö –∫–ª–∏–∫–æ–≤ –ø–æ–¥—Ä—è–¥
      let fastClicksInRow = 0;
      for (let i = clickTimes.length - 1; i >= 0; i--) {
        if (i === 0) break;
        const prevInterval = clickTimes[i] - clickTimes[i-1];
        if (prevInterval < MIN_CLICK_INTERVAL) {
          fastClicksInRow++;
        } else {
          break;
        }
      }
      
      // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ 8+ –±—ã—Å—Ç—Ä—ã—Ö –∫–ª–∏–∫–æ–≤ –ø–æ–¥—Ä—è–¥
      if (fastClicksInRow >= MIN_FAST_CLICKS) {
        warningCount++;
        
        if (warningCount < MAX_WARNINGS) {
          alert(`‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä—ã–µ –∫–ª–∏–∫–∏! (${warningCount}/${MAX_WARNINGS} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π)`);
          clickTimes = [];
          return;
        } else {
          alert("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä. –í—Å–µ –∫–ª–∏–∫–∏ –∏ —Ç–µ–º—ã —Å–±—Ä–æ—à–µ–Ω—ã!");
          resetAll();
          return;
        }
      }
    }
  }
  
  clickTimes.push(now);
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª–∏–∫–∏ (—Å—Ç–∞—Ä—à–µ 2 —Å–µ–∫—É–Ω–¥)
  clickTimes = clickTimes.filter(time => now - time <= CHECK_WINDOW);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã
  if (clickTimes.length > MAX_CLICKS_PER_SECOND) {
    warningCount++;
    
    if (warningCount < MAX_WARNINGS) {
      alert(`‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–ª–∏–∫–æ–≤! (${warningCount}/${MAX_WARNINGS} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π)`);
      // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
      clickTimes = [];
    } else {
      alert("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä. –í—Å–µ –∫–ª–∏–∫–∏ –∏ —Ç–µ–º—ã —Å–±—Ä–æ—à–µ–Ω—ãimage.png");
      resetAll();
    }
  }
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∞–º—ã—Ö –æ—á–µ–≤–∏–¥–Ω—ã—Ö –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–æ–≤)
  if (clickTimes.length >= 50) {
    const intervals = [];
    for (let i = 1; i < clickTimes.length; i++) {
      intervals.push(clickTimes[i] - clickTimes[i-1]);
    }
    
    // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const recentIntervals = intervals.slice(-30);
    const avgInterval = recentIntervals.reduce((a, b) => a + b, 0) / recentIntervals.length;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –û–ß–ï–ù–¨ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ (—Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–Ω—å—à–µ 1–º—Å)
    const isTooRegular = recentIntervals.every(interval => Math.abs(interval - avgInterval) < REGULARITY_THRESHOLD);
    
    // –ò —Å—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –±—ã—Å—Ç—Ä—ã–º (1-10–º—Å)
    if (isTooRegular && avgInterval < 10 && avgInterval > 1) {
      warningCount++;
      
      if (warningCount < MAX_WARNINGS) {
        alert(`‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∫–ª–∏–∫–∏! (${warningCount}/${MAX_WARNINGS} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π)`);
        clickTimes = [];
      } else {
        alert("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä. –í—Å–µ –∫–ª–∏–∫–∏ –∏ —Ç–µ–º—ã —Å–±—Ä–æ—à–µ–Ω—ã!");
        resetAll();
      }
    }
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∫–ª–∏–∫–æ–≤
function handlePress(e) {
  handleAutoClickerProtection();

  e.preventDefault();
  circle.style.transform = `translate(-50%, -50%) scale(${shrinkScale})`;

  let bonus = 1;
  if (circle.src.includes('kryg1.png')) {
    bonus = 2;
  }
  if (circle.src.includes('morozova.png')) {
    bonus = 3;
  }

  clicks += bonus;
  clickCountEl.textContent = clicks;
  saveProgress();

  const rect = circle.getBoundingClientRect();
  const x = rect.left + rect.width / 2;
  const y = rect.top + rect.height / 2;
  spawnParticles(x, y);
}

function handleRelease() {
  circle.style.transform = 'translate(-50%, -50%) scale(1)';
}

circle.addEventListener('touchstart', handlePress);
circle.addEventListener('mousedown', handlePress);
circle.addEventListener('touchend', handleRelease);
circle.addEventListener('mouseup', handleRelease);
circle.addEventListener('mouseleave', handleRelease);

window.addEventListener('resize', () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
});

// === üîä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–≤—É–∫–∞ ===
const themeSound = new Audio('sounds/kryg1.mp4');
const morozSound = new Audio('sounds/moroz.mp4');
let soundDuration = 3;
let morozSoundDuration = 3.5;

function playThemeSound() {
  themeSound.currentTime = 0;
  themeSound.play();
  setTimeout(() => {
    themeSound.pause();
    themeSound.currentTime = 0;
  }, soundDuration * 1000);
}

function playMorozSound() {
  morozSound.currentTime = 0;
  morozSound.play();
  setTimeout(() => {
    morozSound.pause();
    morozSound.currentTime = 0;
  }, morozSoundDuration * 1000);
}

// === üîÅ –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ ===
const resetBtn = document.getElementById('resetBtn');

resetBtn.addEventListener('click', () => {
  const confirmReset = confirm('–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–ª–∏–∫–∏ –∏ –∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–µ–º—ã? üò¢');
  if (!confirmReset) return;
  resetAll();
});

function resetAll() {
  localStorage.removeItem('clicks');
  localStorage.removeItem('purchasedThemes');
  localStorage.removeItem('warningCount');
  clicks = 0;
  purchasedThemes.clear();
  purchasedThemes.add('images/kryg.png');
  circle.src = 'images/kryg.png';
  clickCountEl.textContent = '0';
  warningCount = 0;
  clickTimes = [];
  alert('–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω! –í—Å—ë –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ üòé');
}
